{"version":3,"file":"static/js/658.8e8332ff.chunk.js","mappings":"uRAIaA,GAAQC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,mbAmBLE,GAAcF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,mOAYXI,EAAQJ,EAAAA,GAAAA,MAAH,8EAMLK,EAASL,EAAAA,GAAAA,OAAH,+XAgBNM,EAAQN,EAAAA,GAAAA,EAAH,oC,8ICKlB,EAzDkB,SAAC,GAAgB,IAAfO,EAAc,EAAdA,SAKhB,GAA4CC,EAAAA,EAAAA,GAAQ,CAACC,aAJjC,CAChBC,MAAM,GACNC,SAAS,IAEsDJ,SAAAA,IAA5DK,EAAP,EAAOA,MAAOC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,aAErBJ,EAAkBE,EAAlBF,MAAMC,EAAYC,EAAZD,SAEb,OACI,UAAC,KAAD,YACE,SAACI,EAAA,EAAD,CACAC,QAAQ,KACRC,MAAO,CAAEC,WAAY,SAAUC,WAAY,MAAOC,UAAW,UAF7D,qBAMF,UAACC,EAAA,EAAD,CACFC,UAAU,OACVC,aAAa,MACbhB,SAAUO,EACVU,GAAI,CACFC,QAAS,cACTC,cAAe,SACfC,OAAQ,EACRC,GAAI,EACJC,WAAW,SATX,WAYF,SAACC,EAAA,EAAD,CACEC,MAAM,QACNC,KAAK,QACLC,KAAK,QACLC,MAAOxB,EACPyB,SAAUtB,EACVuB,UAAQ,KAEV,SAACN,EAAA,EAAD,CACEC,MAAM,WACNC,KAAK,WACLC,KAAK,WACLC,MAAOvB,EACPwB,SAAUtB,EACVuB,UAAQ,EACRC,WAAW,qCAIP,SAAChC,EAAA,EAAD,CAAQW,QAAQ,YAAYgB,KAAK,SAAjC,yBAOX,E,8BCnCD,EAnBkB,WACd,IAAMM,GAAWC,EAAAA,EAAAA,MAEjB,GAA0BC,EAAAA,EAAAA,IAAYC,EAAAA,IAA/BC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAMf,OAGI,4BACI,SAAC,EAAD,CAAYpC,SATJ,SAACqC,GACbN,GAASO,EAAAA,EAAAA,IAAMD,GAClB,IAQQF,IAAU,cAAGzB,MAAO,CAAC6B,MAAO,OAAlB,SAA2BH,MAGjD,C,+JChBYI,GAAgB/C,EAAAA,EAAAA,GAAOgD,EAAAA,EAAPhD,CAAH,oLAUbiD,EAAajD,EAAAA,EAAAA,IAAH,2CAIKA,EAAAA,EAAAA,KAAH,qKASJA,EAAAA,EAAAA,GAAOkD,EAAAA,EAAPlD,CAAH,8CAGCA,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,yDAKSA,EAAAA,EAAAA,IAAH,sIAOGA,EAAAA,EAAAA,GAAH,4DAIKA,EAAAA,EAAAA,IAAH,yIACAmD,E,kECnBxB,IA5BgB,SAAC,GAA8B,IAA7B1C,EAA4B,EAA5BA,aAAcF,EAAc,EAAdA,SAC5B,GAA0B6C,EAAAA,EAAAA,WAAS,UAAI3C,IAAvC,eAAOG,EAAP,KAAcyC,EAAd,KAsBA,MAAO,CAACzC,MAAAA,EAAOyC,SAAAA,EAAUxC,aAlBJ,SAAC,GAAc,IAAbyC,EAAY,EAAZA,OACXrB,EAA+BqB,EAA/BrB,KAAMC,EAAyBoB,EAAzBpB,MAAOF,EAAkBsB,EAAlBtB,KAAMuB,EAAYD,EAAZC,QACrBC,EAAqB,aAATxB,EAAuBuB,EAAUrB,EACnDmB,GAAS,SAAAI,GAAS,yBACXA,GADW,cAEbxB,EAAOuB,GAFM,GAIrB,EAWsC1C,aAPlB,SAAC4C,GAClBA,EAAEC,iBACFpD,GAAS,UAAIK,IACbyC,GAAS,UAAI5C,GAChB,EAIJ,C","sources":["Components/ContactForm/ContactForm.styled.js","Components/LoginForm/LoginForm.jsx","Components/Pages/LoginPage.jsx","Components/RegisterForm/RegisterForm.styled.js","Hooks/useForm.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Field, Form} from \"formik\";\n\n\nexport const Input = styled(Field)`\npadding: 15px;\nmargin:15px;\nwidth: 250px;\nheight: 15px;\nfont-size: 16px;\nborder-radius: 40px;\noutline: none;\ncolor:black;\nbackground: white;\nborder: 1px solid darkgrey;\ntransition: border-color 800ms ease-in-out 0s;\ntransition:transform 500ms linear;\n    & :focus , :hover {\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2), 0 16px 20px rgba(0, 0, 0, 0.2);\n        transform: scale(1.1);\n    }\n`;\n\nexport const FormContact = styled(Form)`\ndisplay:flex;\nflex-direction:column;\ntext-align: center;\nwidth:350px;\npadding: 5px;\nborder: 1px solid darkggrey;\nborder-radius: 10px;\ntransition: border-color 800ms ease-in-out 0s;\ncolor:white;\n`;\n\nexport const Label = styled.label`\ndisplay:flex;\nflex-direction: column;\nwidth:200px;\n`;\n\nexport const Button = styled.button`\nbackground-color:darkgrey;\nmargin: 20px;\n border-radius: 25px;\n padding: 7px;\n width: 180px;\n font-size: 20px;\n    curcor:pointer;\n    transition:transform 500ms linear;\n    & :focus , :hover {\n        background-color:white;\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2), 0 16px 20px rgba(0, 0, 0, 0.2);\n        transform: scale(1.1);\n    }\n`;\n\nexport const Error = styled.p`\ncolor: red;\n`;\n\n\n","import {FormContainer} from '../RegisterForm/RegisterForm.styled';\nimport { Box, Button, TextField,Typography } from '@mui/material';\nimport useForm from \"../../Hooks/useForm\";\n\n\nconst LoginForm = ({onSubmit}) => {\n    const initialState ={\n        email:\"\",\n        password:\"\",\n    }\n    const {state, handleChange, handleSubmit} = useForm({initialState, onSubmit})\n\n    const {email,password} = state;\n\n    return (\n        <FormContainer>\n          <Typography\n          variant=\"h4\"\n          style={{ fontFamily: 'Caveat', fontWeight: '400', textAlign: 'center' }}\n        >\n          Log in\n        </Typography>\n        <Box\n      component=\"form\"\n      autoComplete='off'\n      onSubmit={handleSubmit}\n      sx={{\n        display: 'inline-flex',\n        flexDirection: 'column',\n        rowGap: 2,\n        my: 2,\n        background:\"white\",\n      }}\n    >\n      <TextField\n        label=\"Email\"\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        onChange={handleChange}\n        required\n      />\n      <TextField\n        label=\"Password\"\n        type='password'\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n        required\n        helperText=\"7 symbols at least for password\"\n\n        />\n                \n            <Button variant=\"contained\" type=\"submit\">\n        Log in\n      </Button>\n        </Box>\n        </FormContainer>\n    )\n\n}\n\nexport default LoginForm;","import LoginForm from \"Components/LoginForm\";\nimport {  useDispatch, useSelector } from \"react-redux\";\nimport { getAuthError } from \"Redux/Auth/Auth-selectors\";\nimport { login } from \"Redux/Auth/Auth-operations\";\n\n\nconst LoginPage = () =>{\n    const dispatch = useDispatch();\n   \n    const {status, message} = useSelector(getAuthError);\n    const onLogin = (data) =>{\n        dispatch(login(data));\n    }\n    \n\n    return (\n       \n\n        <div>\n            <LoginForm  onSubmit={onLogin}/>\n            {status && <p style={{color: \"red\"}}>{message}</p>}\n        </div>\n    )\n}\n\nexport default LoginPage;","import styled from \"@emotion/styled\";\nimport { FormControl} from \"@mui/material\";\nimport { Container } from \"@mui/system\";\nimport { Button } from \"../ContactForm/ContactForm.styled\";\nimport apple from '../../img/apple.jpeg'\n\n\nexport const FormContainer = styled(Container)`\ndisplay: flex;\nwidth:50%;\nmargin-top: 30px;\nborder: 1px solid #6d6d6c;\nborder-radius: 10px;\ndisplay: flex;\nflex-direction:column;\nbackground:white;\n`\nexport const BoxChecked = styled.div`\n\ndisplay: block;\n`\nexport const RedisterForm = styled.form`\nwidth:50%;\nmargin-top: 30px;\nborder: 1px solid #6d6d6c;\nborder-radius: 10px;\ndisplay: flex;\nflex-direction:column;\nbackground:white;\n`\nexport const Field = styled(FormControl)`\nmargin-bottom:10px;\n`\nexport const Btn = styled(Button)`\nwidth: 30%;\nalign-self:center;\n`\n\nexport const FormTitle = styled.div`\ndisplay:flex;\nflex-direction: column;\njustify-content: center;\nalign-items:center;\nmargin:80px 0 20px 0;\n`\nexport const TitleText = styled.h1`\nmargin: 3px 0 0 0;\ncolor:#6d6d6c;\n`\nexport const SteledImage = styled.div`\nbackground-image: url(${apple});\nbackground-size: cover;\nwidth: 40%;\nmargin: 40px 50px 0 0;\nborder-radius: 5px;\n\n`\n\n","import { useState } from \"react\";\n\n\nconst useForm = ({initialState, onSubmit}) => {\n    const [state, setState] = useState({...initialState});\n    \n\n    \n    const handleChange = ({target}) => {\n        const { name, value, type, checked } = target;\n        const newValue = (type === \"checkbox\") ? checked : value;\n        setState(prevState => ({\n            ...prevState,\n            [name]: newValue\n        }))\n    }\n\n    \n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({...state});\n        setState({...initialState})\n    };\n   \n\n    return {state, setState, handleChange, handleSubmit}\n}\n\n\n\nexport default useForm;"],"names":["Input","styled","Field","FormContact","Form","Label","Button","Error","onSubmit","useForm","initialState","email","password","state","handleChange","handleSubmit","Typography","variant","style","fontFamily","fontWeight","textAlign","Box","component","autoComplete","sx","display","flexDirection","rowGap","my","background","TextField","label","type","name","value","onChange","required","helperText","dispatch","useDispatch","useSelector","getAuthError","status","message","data","login","color","FormContainer","Container","BoxChecked","FormControl","apple","useState","setState","target","checked","newValue","prevState","e","preventDefault"],"sourceRoot":""}