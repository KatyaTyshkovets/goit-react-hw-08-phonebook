{"version":3,"file":"static/js/357.637d5077.chunk.js","mappings":"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","sources":["Components/ContactForm/ContactForm.styled.js","Redux/Contacts/Contact-selectors.js","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactList.styled.js","Components/ItemList/Item.styled.js","Components/ItemList/Item.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.styled.js","Components/Filter/Filter.jsx","Components/Pages/Contacts.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Field, Form} from \"formik\";\n\n\nexport const Input = styled(Field)`\npadding: 15px;\nmargin:15px;\nwidth: 250px;\nheight: 15px;\nfont-size: 16px;\nborder-radius: 40px;\noutline: none;\ncolor:black;\nbackground: white;\nborder: 1px solid darkgrey;\ntransition: border-color 800ms ease-in-out 0s;\ntransition:transform 500ms linear;\n    & :focus , :hover {\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2), 0 16px 20px rgba(0, 0, 0, 0.2);\n        transform: scale(1.1);\n    }\n`;\n\nexport const FormContact = styled(Form)`\ndisplay:flex;\nflex-direction:column;\ntext-align: center;\nwidth:350px;\npadding: 5px;\nborder: 1px solid darkggrey;\nborder-radius: 10px;\ntransition: border-color 800ms ease-in-out 0s;\ncolor:white;\n`;\n\nexport const Label = styled.label`\ndisplay:flex;\nflex-direction: column;\nwidth:200px;\n`;\n\nexport const Button = styled.button`\nbackground-color:darkgrey;\nmargin: 20px;\n border-radius: 25px;\n padding: 7px;\n width: 180px;\n font-size: 20px;\n    curcor:pointer;\n    transition:transform 500ms linear;\n    & :focus , :hover {\n        background-color:white;\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2), 0 16px 20px rgba(0, 0, 0, 0.2);\n        transform: scale(1.1);\n    }\n`;\n\nexport const Error = styled.p`\ncolor: red;\n`;\n\n\n","\nexport const getItem = ({ contacts }) => contacts.items;\n\nexport const getFilter = ({ filter }) => filter;\n\nexport const getVisibleNames = ({contacts,filter}) => {\n    if (!filter) {\n        return contacts.items;\n   }\n    return contacts.items.filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase())\n    );\n};\n\n","import { ErrorMessage, Formik } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from 'react-toastify';\nimport { addContact } from \"../../Redux/Contacts/Contact-operations\";\nimport * as yup from 'yup';\nimport { getItem } from \"../../Redux/Contacts/Contact-selectors\";\nimport { Button, Error, FormContact, Input, Label } from './ContactForm.styled';\n\nconst schema = yup.object().shape({\n    name: yup\n        .string()\n        .required('Enter name')\n        .matches(\n            /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n            \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        ),\n    number: yup\n        .string()\n        .required('Enter number')\n        .matches(\n            /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n            \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n    ),\n});\n\nconst FormError = ({ name }) => {\n    return (\n        <ErrorMessage\n            name={name}\n            render={message => <Error>{message}</Error>}\n        />\n    );\n};\n\nconst ContactForm = () => {\n    const states = useSelector(getItem);\n    const dispatch = useDispatch();\n\n  \n\n    const handleSubmit = ({name, number}, { resetForm }) => {\n        const newContact = {\n            name, number,\n        };\n        states.find(store => store.name === newContact.name)\n            ? toast.info(`${name} is already in contacts.`)\n            : dispatch(addContact(newContact));\n        resetForm();\n    };\n    return (\n        <Formik\n            initialValues={{\n                name: '',\n                number: '',\n            }}\n            validationSchema={schema}\n            onSubmit={handleSubmit}>\n            <FormContact>\n                <Label htmlFor=\"name\">\n                    Name\n                    <Input type=\"text\" name=\"name\" />\n                    <FormError name=\"name\" />\n                </Label>\n                <Label htmlFor=\"number\">\n                    Number\n                    <Input type=\"tel\" name=\"number\" />\n                    <FormError name=\"number\" />\n                </Label>\n                <Button type=\"submit\">Add contact</Button>\n\n            </FormContact>\n        </Formik>\n    );\n};\n    \n\n\n\n\nexport default ContactForm","import styled from \"styled-components\";\n\nexport const List = styled.ul`\nwidth:250px;\nlist-style: none;\n\n`;\n\n","import styled from \"styled-components\";\n\nexport const Item = styled.li`\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\npadding: 10px;\n`;\n\nexport const Text = styled.p`\nmargin: 0 auto;\ncolor: white;\n`;\n\nexport const Button = styled.button`\nborder: 1px solid darkgrey;\nborder-radius: 25px;\ncursor: pointer;\n& :focus , :hover {\n        background-color:red;\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2), 0 16px 20px rgba(0, 0, 0, 0.2);\n        transform: scale(0.9);\n    }\n`;","import { useSelector, useDispatch } from 'react-redux';\nimport { Button, Text, Item } from './Item.styled';\nimport { removeContact } from '../../Redux/Contacts/Contact-operations';\nimport { getFilter, getItem } from '../../Redux/Contacts/Contact-selectors'\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../../Redux/Contacts/Contact-operations';\n\nexport const ContactItem = () => {\n    const filter = useSelector(getFilter);\n    const states = useSelector(getItem);\n    const dispatch = useDispatch();\n\n    const deleteContact = id => {\n        dispatch(removeContact(id));\n    };\n\n    const getVisisbleContacts = states?.filter(state =>\n        state?.name.toLowerCase().includes(filter.toLowerCase())\n    );\n    useEffect(() => {\n    dispatch(fetchContacts())\n},[dispatch])\n    return (\n        <>\n            {getVisisbleContacts?.map(({ id, name, number }) =>\n            (\n                <Item key={id}>\n            <Text>\n                {name} : {number}\n            </Text>\n            <Button onClick={()=>deleteContact(id)}>Delete</Button>\n            </Item>\n            ) )}\n        \n            </>\n    );\n};\n\n\n\n\n","import {List} from './ContactList.styled';\nimport  {ContactItem}  from '../ItemList/Item';\n\n\n\n\n const ContactList = () => {\n  return (\n    <List>\n      <ContactItem />\n    </List>\n  );\n};\n\n\n\n\n\nexport default ContactList;","import styled from \"styled-components\";\n\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column;\nwidth: 320px;\nmargin: 20px;\ncolor: white;\npading: 8px;\n`;\n\nexport const Input = styled.input`\nmargin-top: 8px;\npadding: 9px;\nwidth: 200px;\nborder-radius: 8px;\nborder: 1px solid darkgray;\ntransition: border-color 800ms ease-in-out 0s;\nbackground-color: white;\n`;\n\n","import { Label, Input } from './Filter.styled';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from '../../Redux/Contacts/Contact-selectors';\nimport { setFilter } from '../../Redux/Contacts/Filter-slice';\n\nconst Filter = () => {\n   const dispatch = useDispatch();\n     const filter = useSelector(getFilter);\n    const changeFilter = e => {\n        dispatch(setFilter(e.currentTarget.value));\n    };\n    return (\n        \n        <Label htmlFor=''>\n            Find contacts by name\n            <Input type=\"text\"  value={filter} onChange={changeFilter} />\n            </Label>\n            \n    );\n};\n\n\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n};\n\n\nexport default Filter;","import ContactForm from '../ContactForm/ContactForm';\nimport ContactList from 'Components/ContactList';\nimport Filter from 'Components/Filter';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  padding: 30px;\n  margin-top: 30px;\n  align-items: baseline;\n  justify-content: space-evenly;\n`;\n\nconst Wrapper = styled.div`\n  padding: 15px;\n  box-shadow: rgb(33 33 33) 0px 2px 10px 1px;\n`;\n\n\n\nconst ContactsPage =() => {\n\n\n    return (\n        \n             <Container >\n              <Wrapper>\n            <ContactForm />\n            </Wrapper>\n            <Wrapper>\n            <Filter />\n             <ContactList />\n             </Wrapper>\n             </Container>\n             \n             \n    )\n}\n\nexport default ContactsPage;"],"names":["Input","styled","Field","FormContact","Form","Label","Button","Error","getItem","contacts","items","getFilter","filter","schema","yup","shape","name","required","matches","number","FormError","render","message","states","useSelector","dispatch","useDispatch","initialValues","validationSchema","onSubmit","resetForm","newContact","find","store","toast","addContact","htmlFor","type","List","Item","Text","ContactItem","getVisisbleContacts","state","toLowerCase","includes","useEffect","fetchContacts","map","id","onClick","removeContact","deleteContact","value","onChange","e","setFilter","currentTarget","Container","Wrapper"],"sourceRoot":""}