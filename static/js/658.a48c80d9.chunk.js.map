{"version":3,"file":"static/js/658.a48c80d9.chunk.js","mappings":"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","sources":["Components/ContactForm/ContactForm.styled.js","Components/LoginForm/LoginForm.jsx","Components/Pages/LoginPage.jsx","Components/RegisterForm/RegisterForm.styled.js","Hooks/useForm.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Field, Form} from \"formik\";\n\n\nexport const Input = styled(Field)`\npadding: 15px;\nmargin:15px;\nwidth: 250px;\nheight: 15px;\nfont-size: 16px;\nborder-radius: 40px;\noutline: none;\ncolor:black;\nbackground: white;\nborder: 1px solid darkgrey;\ntransition: border-color 800ms ease-in-out 0s;\ntransition:transform 500ms linear;\n    & :focus , :hover {\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2), 0 16px 20px rgba(0, 0, 0, 0.2);\n        transform: scale(1.1);\n    }\n`;\n\nexport const FormContact = styled(Form)`\ndisplay:flex;\nflex-direction:column;\ntext-align: center;\nwidth:350px;\npadding: 5px;\nborder: 1px solid darkggrey;\nborder-radius: 10px;\ntransition: border-color 800ms ease-in-out 0s;\ncolor:white;\n`;\n\nexport const Label = styled.label`\ndisplay:flex;\nflex-direction: column;\nwidth:200px;\n`;\n\nexport const Button = styled.button`\nbackground-color:darkgrey;\nmargin: 20px;\n border-radius: 25px;\n padding: 7px;\n width: 180px;\n font-size: 20px;\n    curcor:pointer;\n    transition:transform 500ms linear;\n    & :focus , :hover {\n        background-color:white;\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2), 0 16px 20px rgba(0, 0, 0, 0.2);\n        transform: scale(1.1);\n    }\n`;\n\nexport const Error = styled.p`\ncolor: red;\n`;\n\n\n","import {FormContainer, BoxChecked, IconBox} from '../RegisterForm/RegisterForm.styled';\nimport { Box, Button, TextField,Typography } from '@mui/material';\nimport useForm from \"../../Hooks/useForm\";\nimport Checkbox from '@mui/material/Checkbox';\nimport { NavLink } from 'react-router-dom';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport { useState } from 'react';\n\n\nconst LoginForm = ({onSubmit}) => {\n    const initialState ={\n        email:\"\",\n        password:\"\",\n        remember: false,\n    }\n    const {state, handleChange, handleSubmit} = useForm({initialState, onSubmit})\n\n    const {email,password,checked} = state;\n\n    const [type,setType] = useState('text');\n    const [icon, setIcon] = useState(Visibility);\n        const togglePassword = () => {\n           if(type === 'password'){\n            setIcon(Visibility);\n            setType('text');\n           }\n           else{\n            setIcon(VisibilityOff);\n            setType('password');\n           }\n          };\n        \n          \n    const btnstyle={margin:'5px 0'}\n\n\n    return (\n        <FormContainer>\n          <Typography\n          variant=\"h4\"\n          style={{ fontFamily: 'Caveat', fontWeight: '400', textAlign: 'center' }}\n        >\n          Log in\n        </Typography>\n        <Box\n      component=\"form\"\n      autoComplete='off'\n      onSubmit={handleSubmit}\n      sx={{\n        display: 'inline-flex',\n        flexDirection: 'column',\n        rowGap: 2,\n        my: 2,\n        background:\"white\",\n      }}\n    >\n      <TextField\n        label=\"Email\"\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        onChange={handleChange}\n        required\n      />\n      <TextField\n        label=\"Password\"\n        type='password'\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n         required\n        helperText=\"7 symbols at least for password\"\n\n          />\n\n        <IconBox>\n          <span onClick={togglePassword} >\n            <VisibilityOff icon={icon}/>\n            </span> \n            </IconBox>\n           <BoxChecked>\n                <label  htmlFor=\"\">Remember me</label>\n                <Checkbox\n                  checked={checked}\n                  onChange={handleChange}\n                 inputProps={{ 'aria-label': 'controlled' }}\n               />\n            </BoxChecked>     \n             \n            <Button variant=\"contained\" type=\"submit\" style={btnstyle}>  \n                 Log in\n            </Button>\n            <Typography>\n                <NavLink to='/register'>\n                  Forgot password ?\n                </NavLink>\n              </Typography>\n        </Box>\n        </FormContainer>\n    )\n\n}\n\nexport default LoginForm;","import LoginForm from \"Components/LoginForm\";\nimport {  useDispatch, useSelector } from \"react-redux\";\nimport { getAuthError } from \"Redux/Auth/Auth-selectors\";\nimport { login } from \"Redux/Auth/Auth-operations\";\n\n\nconst LoginPage = () =>{\n    const dispatch = useDispatch();\n   \n    const {status, message} = useSelector(getAuthError);\n    const onLogin = (data) =>{\n        dispatch(login(data));\n    }\n    \n\n    return (\n       \n\n        <div>\n            <LoginForm  onSubmit={onLogin}/>\n            {status && <p style={{color: \"red\"}}>{message}</p>}\n        </div>\n    )\n}\n\nexport default LoginPage;","import styled from \"@emotion/styled\";\nimport { FormControl} from \"@mui/material\";\nimport { Container } from \"@mui/system\";\nimport { Button } from \"../ContactForm/ContactForm.styled\";\n\n\nexport const IconContainer = styled.i`\ndisplay:flex;\njustify-content: space-between;\nalign-items:center;\nposition:absolute;\ntop:49%;\nmargin-left:35%;\n`;\n\nexport const IconBox = styled.i`\ndisplay:flex;\njustify-content: space-between;\nalign-items:center;\nposition:absolute;\ntop:38%;\nmargin-left:35%;\n`;\n\nexport const FormContainer = styled(Container)`\ndisplay: flex;\nwidth:50%;\nmargin-top: 30px;\nborder: 1px solid #6d6d6c;\nborder-radius: 10px;\ndisplay: flex;\nflex-direction:column;\nbackground:white;\n`\nexport const BoxChecked = styled.div`\n\ndisplay: block;\n`\nexport const Box = styled.div`\nwidth:50%;\n`\nexport const RedisterForm = styled.form`\nwidth:50%;\nmargin-top: 30px;\nborder: 1px solid #6d6d6c;\nborder-radius: 10px;\ndisplay: flex;\nflex-direction:column;\nbackground:white;\n`\nexport const Field = styled(FormControl)`\nmargin-bottom:10px;\n`\nexport const Btn = styled(Button)`\nwidth: 30%;\nalign-self:center;\n`\n\nexport const FormTitle = styled.div`\ndisplay:flex;\nflex-direction: column;\njustify-content: center;\nalign-items:center;\nmargin:80px 0 20px 0;\n`\nexport const TitleText = styled.h1`\nmargin: 3px 0 0 0;\ncolor:#ffff;\n`\nexport const SteledImage = styled.div`\n\nwidth: 40%;\nmargin: 40px 50px 0 0;\nborder-radius: 5px;\n\n`\n\n","import { useState } from \"react\";\n\n\nconst useForm = ({initialState, onSubmit}) => {\n    const [state, setState] = useState({...initialState});\n    \n\n    \n    const handleChange = ({target}) => {\n        const { name, value, type, checked } = target;\n        const newValue = (type === \"checkbox\") ? checked : value;\n        setState(prevState => ({\n            ...prevState,\n            [name]: newValue\n        }))\n    }\n\n    \n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({...state});\n        setState({...initialState})\n    };\n   \n\n    return {state, setState, handleChange, handleSubmit}\n}\n\n\n\nexport default useForm;"],"names":["Input","styled","Field","FormContact","Form","Label","Button","Error","onSubmit","useForm","initialState","email","password","remember","state","handleChange","handleSubmit","checked","useState","type","setType","Visibility","icon","setIcon","Typography","variant","style","fontFamily","fontWeight","textAlign","Box","component","autoComplete","sx","display","flexDirection","rowGap","my","background","TextField","label","name","value","onChange","required","helperText","onClick","VisibilityOff","htmlFor","Checkbox","inputProps","margin","to","dispatch","useDispatch","useSelector","getAuthError","status","message","data","login","color","IconContainer","IconBox","FormContainer","Container","BoxChecked","FormControl","setState","target","newValue","prevState","e","preventDefault"],"sourceRoot":""}