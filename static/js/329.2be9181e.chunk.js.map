{"version":3,"file":"static/js/329.2be9181e.chunk.js","mappings":"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","sources":["Components/ContactForm/ContactForm.styled.js","Components/RegisterForm/InitialState.js","Components/RegisterForm/RegisterForm.jsx","Components/Pages/RegisterPage.jsx","Components/RegisterForm/RegisterForm.styled.js","Hooks/useForm.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Field, Form} from \"formik\";\n\n\nexport const Input = styled(Field)`\npadding: 15px;\nmargin:15px;\nwidth: 250px;\nheight: 15px;\nfont-size: 16px;\nborder-radius: 40px;\noutline: none;\ncolor:black;\nbackground: white;\nborder: 1px solid darkgrey;\ntransition: border-color 800ms ease-in-out 0s;\ntransition:transform 500ms linear;\n    & :focus , :hover {\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2), 0 16px 20px rgba(0, 0, 0, 0.2);\n        transform: scale(1.1);\n    }\n`;\n\nexport const FormContact = styled(Form)`\ndisplay:flex;\nflex-direction:column;\ntext-align: center;\nwidth:350px;\npadding: 5px;\nborder: 1px solid darkggrey;\nborder-radius: 10px;\ntransition: border-color 800ms ease-in-out 0s;\ncolor:white;\n`;\n\nexport const Label = styled.label`\ndisplay:flex;\nflex-direction: column;\nwidth:200px;\n`;\n\nexport const Button = styled.button`\nbackground-color:darkgrey;\nmargin: 20px;\n border-radius: 25px;\n padding: 7px;\n width: 180px;\n font-size: 20px;\n    curcor:pointer;\n    transition:transform 500ms linear;\n    & :focus , :hover {\n        background-color:white;\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2), 0 16px 20px rgba(0, 0, 0, 0.2);\n        transform: scale(1.1);\n    }\n`;\n\nexport const Error = styled.p`\ncolor: red;\n`;\n\n\n","export const initialState = {\n    name: \"\",\n    email: \"\",\n    password:\"\",\n    remember: false,\n}","import { Box, Button, TextField, Typography } from '@mui/material';\n//import IconButton from '@mui/material/IconButton';\nimport useForm from \"../../Hooks/useForm\";\nimport {FormContainer,BoxChecked,IconContainer} from './RegisterForm.styled';\nimport { initialState } from \"./InitialState\";\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport { useState } from 'react';\nimport Checkbox from '@mui/material/Checkbox';\nimport { NavLink } from 'react-router-dom';\n\n\nconst RegisterForm = ({onSubmit}) => {\n    const {state, handleChange, handleSubmit} = useForm({initialState, onSubmit})\n  \n    const {email, name, password, checked} = state;\n\nconst [type,setType] = useState('text');\nconst [icon, setIcon] = useState(Visibility);\n    const togglePassword = () => {\n       if(type === 'password'){\n        setIcon(Visibility);\n        setType('text');\n       }\n       else{\n        setIcon(VisibilityOff);\n        setType('password');\n       }\n      };\n    \n      \nconst btnstyle={margin:'5px 0'}\n      \n    return (\n        <FormContainer>\n          <Typography\n          variant=\"h4\"\n          style={{ fontFamily: 'Caveat', fontWeight: '400' ,textAlign: 'center' }}\n        >\n          Register\n        </Typography>\n        <Box\n      component=\"form\"\n      autoComplete='off'\n      onSubmit={handleSubmit}\n      sx={{\n        display: 'inline-flex',\n        flexDirection: 'column',\n        rowGap: 2,\n        my: 2,\n        background:\"white\",\n      }}\n    >\n      <TextField\n        label=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n        fullWidth required\n      />\n      <TextField\n        label=\"Email\"\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        onChange={handleChange}\n        fullWidth required\n      />\n      <TextField\n        label=\"Password\"\n        type={type}\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n       fullWidth required\n        helperText=\"7 symbols at least for password\"\n\n        />\n        <IconContainer>\n          <span onClick={togglePassword} >\n            <VisibilityOff icon={icon}/>\n            </span> \n            </IconContainer>\n        \n                <BoxChecked>\n                <label  htmlFor=\"\">Remember me</label>\n                <Checkbox\n  checked={checked}\n  onChange={handleChange}\n  inputProps={{ 'aria-label': 'controlled' }}\n/>\n</BoxChecked>\n            <Button  variant=\"contained\" type=\"submit\" style={btnstyle}>\n        Register\n      </Button>\n     \n              <Typography> Do you have an a account ?\n                <NavLink to='/login'>\n                  Sign up ?\n                </NavLink>\n              </Typography>\n        </Box>\n        </FormContainer>\n    )\n\n}\n\nexport default RegisterForm;","import {useSelector, useDispatch} from \"react-redux\";\nimport RegisterForm from \"Components/RegisterForm\";\nimport {signup} from \"../../Redux/Auth/Auth-operations\";\nimport { getAuthError } from \"../../Redux/Auth/Auth-selectors\";\nimport {toast} from 'react-toastify';\n\n\nconst RegisterPage = () => {\n    const dispatch = useDispatch();\n    const {status, message} = useSelector(getAuthError);\n   \n\n    const onRegister = data => {\n        console.log(data);\n        if (status === 400) {\n          toast.success('You are already authorized');\n        }\n        dispatch(signup(data));\n      };\n\n    \n\n    return (\n      <>\n    \n            <RegisterForm onSubmit={onRegister} />\n            {status && <p style={{color: \"red\"}}>{message}</p>}\n            \n           \n       </>\n    )\n}\n\nexport default RegisterPage;","import styled from \"@emotion/styled\";\nimport { FormControl} from \"@mui/material\";\nimport { Container } from \"@mui/system\";\nimport { Button } from \"../ContactForm/ContactForm.styled\";\n\n\nexport const IconContainer = styled.i`\ndisplay:flex;\njustify-content: space-between;\nalign-items:center;\nposition:absolute;\ntop:49%;\nmargin-left:35%;\n`;\n\nexport const IconBox = styled.i`\ndisplay:flex;\njustify-content: space-between;\nalign-items:center;\nposition:absolute;\ntop:38%;\nmargin-left:35%;\n`;\n\nexport const FormContainer = styled(Container)`\ndisplay: flex;\nwidth:50%;\nmargin-top: 30px;\nborder: 1px solid #6d6d6c;\nborder-radius: 10px;\ndisplay: flex;\nflex-direction:column;\nbackground:white;\n`\nexport const BoxChecked = styled.div`\n\ndisplay: block;\n`\nexport const Box = styled.div`\nwidth:50%;\n`\nexport const RedisterForm = styled.form`\nwidth:50%;\nmargin-top: 30px;\nborder: 1px solid #6d6d6c;\nborder-radius: 10px;\ndisplay: flex;\nflex-direction:column;\nbackground:white;\n`\nexport const Field = styled(FormControl)`\nmargin-bottom:10px;\n`\nexport const Btn = styled(Button)`\nwidth: 30%;\nalign-self:center;\n`\n\nexport const FormTitle = styled.div`\ndisplay:flex;\nflex-direction: column;\njustify-content: center;\nalign-items:center;\nmargin:80px 0 20px 0;\n`\nexport const TitleText = styled.h1`\nmargin: 3px 0 0 0;\ncolor:#ffff;\n`\nexport const SteledImage = styled.div`\n\nwidth: 40%;\nmargin: 40px 50px 0 0;\nborder-radius: 5px;\n\n`\n\n","import { useState } from \"react\";\n\n\nconst useForm = ({initialState, onSubmit}) => {\n    const [state, setState] = useState({...initialState});\n    \n\n    \n    const handleChange = ({target}) => {\n        const { name, value, type, checked } = target;\n        const newValue = (type === \"checkbox\") ? checked : value;\n        setState(prevState => ({\n            ...prevState,\n            [name]: newValue\n        }))\n    }\n\n    \n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({...state});\n        setState({...initialState})\n    };\n   \n\n    return {state, setState, handleChange, handleSubmit}\n}\n\n\n\nexport default useForm;"],"names":["Input","styled","Field","FormContact","Form","Label","Button","Error","initialState","name","email","password","remember","onSubmit","useForm","state","handleChange","handleSubmit","checked","useState","type","setType","Visibility","icon","setIcon","Typography","variant","style","fontFamily","fontWeight","textAlign","Box","component","autoComplete","sx","display","flexDirection","rowGap","my","background","TextField","label","value","onChange","fullWidth","required","helperText","onClick","VisibilityOff","htmlFor","Checkbox","inputProps","margin","to","dispatch","useDispatch","useSelector","getAuthError","status","message","data","console","log","toast","signup","color","IconContainer","IconBox","FormContainer","Container","BoxChecked","FormControl","setState","target","newValue","prevState","e","preventDefault"],"sourceRoot":""}